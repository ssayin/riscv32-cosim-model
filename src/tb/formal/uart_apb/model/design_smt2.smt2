; SMT-LIBv2 description generated by Yosys 0.30+16 (git sha1 8b2a00102, gcc 13.2.1 -fPIC -Os)
; yosys-smt2-module uart
(declare-sort |uart_s| 0)
(declare-fun |uart_is| (|uart_s|) Bool)
(declare-fun |uart#0| (|uart_s|) Bool) ; \rst_n
; yosys-smt2-input rst_n 1
; yosys-smt2-wire rst_n 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rst_n"], "smtname": "rst_n", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_n rst_n| ((state |uart_s|)) Bool (|uart#0| state))
(declare-fun |uart#1| (|uart_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_n clk| ((state |uart_s|)) Bool (|uart#1| state))
(declare-fun |uart#2| (|uart_s|) (_ BitVec 32)) ; \av_writedata
; yosys-smt2-input av_writedata 32
; yosys-smt2-wire av_writedata 32
; yosys-smt2-witness {"offset": 0, "path": ["\\av_writedata"], "smtname": "av_writedata", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |uart_n av_writedata| ((state |uart_s|)) (_ BitVec 32) (|uart#2| state))
(declare-fun |uart#3| (|uart_s|) Bool) ; \av_write_n
; yosys-smt2-input av_write_n 1
; yosys-smt2-wire av_write_n 1
; yosys-smt2-witness {"offset": 0, "path": ["\\av_write_n"], "smtname": "av_write_n", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_n av_write_n| ((state |uart_s|)) Bool (|uart#3| state))
; yosys-smt2-anyinit uart#4 1 uart.sv:18.3-27.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_25"], "smtname": 4, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |uart#4| (|uart_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_25
(define-fun |uart#5| ((state |uart_s|)) (_ BitVec 1) (ite (|uart#0| state) (|uart#4| state) #b0)) ; \av_waitrequest
; yosys-smt2-output av_waitrequest 1
; yosys-smt2-wire av_waitrequest 1
(define-fun |uart_n av_waitrequest| ((state |uart_s|)) Bool (= ((_ extract 0 0) (|uart#5| state)) #b1))
; yosys-smt2-anyinit uart#6 32 uart.sv:18.3-27.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_26"], "smtname": 6, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart#6| (|uart_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_26
(define-fun |uart#7| ((state |uart_s|)) (_ BitVec 32) (ite (|uart#0| state) (|uart#6| state) #b00000000000000000000000000000000)) ; \av_readdata
; yosys-smt2-output av_readdata 32
; yosys-smt2-wire av_readdata 32
(define-fun |uart_n av_readdata| ((state |uart_s|)) (_ BitVec 32) (|uart#7| state))
(declare-fun |uart#8| (|uart_s|) Bool) ; \av_read_n
; yosys-smt2-input av_read_n 1
; yosys-smt2-wire av_read_n 1
; yosys-smt2-witness {"offset": 0, "path": ["\\av_read_n"], "smtname": "av_read_n", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_n av_read_n| ((state |uart_s|)) Bool (|uart#8| state))
; yosys-smt2-anyinit uart#9 1 uart.sv:18.3-27.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_27"], "smtname": 9, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |uart#9| (|uart_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_27
(define-fun |uart#10| ((state |uart_s|)) (_ BitVec 1) (ite (|uart#0| state) (|uart#9| state) #b0)) ; \av_irq
; yosys-smt2-output av_irq 1
; yosys-smt2-wire av_irq 1
(define-fun |uart_n av_irq| ((state |uart_s|)) Bool (= ((_ extract 0 0) (|uart#10| state)) #b1))
(declare-fun |uart#11| (|uart_s|) Bool) ; \av_chipselect
; yosys-smt2-input av_chipselect 1
; yosys-smt2-wire av_chipselect 1
; yosys-smt2-witness {"offset": 0, "path": ["\\av_chipselect"], "smtname": "av_chipselect", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_n av_chipselect| ((state |uart_s|)) Bool (|uart#11| state))
(declare-fun |uart#12| (|uart_s|) Bool) ; \av_address
; yosys-smt2-input av_address 1
; yosys-smt2-wire av_address 1
; yosys-smt2-witness {"offset": 0, "path": ["\\av_address"], "smtname": "av_address", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_n av_address| ((state |uart_s|)) Bool (|uart#12| state))
; yosys-smt2-register _witness_.anyinit_procdff_27 1
; yosys-smt2-wire _witness_.anyinit_procdff_27 1
(define-fun |uart_n _witness_.anyinit_procdff_27| ((state |uart_s|)) Bool (= ((_ extract 0 0) (|uart#9| state)) #b1))
; yosys-smt2-register _witness_.anyinit_procdff_26 32
; yosys-smt2-wire _witness_.anyinit_procdff_26 32
(define-fun |uart_n _witness_.anyinit_procdff_26| ((state |uart_s|)) (_ BitVec 32) (|uart#6| state))
; yosys-smt2-register _witness_.anyinit_procdff_25 1
; yosys-smt2-wire _witness_.anyinit_procdff_25 1
(define-fun |uart_n _witness_.anyinit_procdff_25| ((state |uart_s|)) Bool (= ((_ extract 0 0) (|uart#4| state)) #b1))
(define-fun |uart#13| ((state |uart_s|)) (_ BitVec 1) (bvnot (ite (|uart#1| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$54
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$55
(define-fun |uart_u 0| ((state |uart_s|)) Bool (or (= ((_ extract 0 0) (|uart#13| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$55
(define-fun |uart#14| ((state |uart_s|)) (_ BitVec 32) (ite (|uart#0| state) (|uart#7| state) #b00000000000000000000000000000000)) ; $auto$rtlil.cc:2496:Mux$41
(define-fun |uart#15| ((state |uart_s|)) (_ BitVec 1) (ite (|uart#0| state) #b1 #b0)) ; $auto$rtlil.cc:2496:Mux$39
(define-fun |uart_a| ((state |uart_s|)) Bool true)
(define-fun |uart_u| ((state |uart_s|)) Bool 
  (|uart_u 0| state)
)
(define-fun |uart_i| ((state |uart_s|)) Bool true)
(define-fun |uart_h| ((state |uart_s|)) Bool true)
(define-fun |uart_t| ((state |uart_s|) (next_state |uart_s|)) Bool (and
  (= #b0 (|uart#9| next_state)) ; $procdff$27 \_witness_.anyinit_procdff_27
  (= (|uart#14| state) (|uart#6| next_state)) ; $procdff$26 \_witness_.anyinit_procdff_26
  (= (|uart#15| state) (|uart#4| next_state)) ; $procdff$25 \_witness_.anyinit_procdff_25
)) ; end of module uart
; yosys-smt2-module uart_apb
(declare-sort |uart_apb_s| 0)
(declare-fun |uart_apb_is| (|uart_apb_s|) Bool)
; yosys-smt2-anyinit uart_apb#0 2 uart_apb.sv:63.3-79.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_28"], "smtname": 0, "smtoffset": 0, "type": "init", "width": 2}
(declare-fun |uart_apb#0| (|uart_apb_s|) (_ BitVec 2)) ; \_witness_.anyinit_procdff_28
(declare-fun |uart_apb#1| (|uart_apb_s|) (_ BitVec 1)) ; \rst_n
(define-fun |uart_apb#2| ((state |uart_apb_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|uart_apb#1| state)) #b1) (|uart_apb#0| state) #b00)) ; \state
; yosys-smt2-wire state 2
(define-fun |uart_apb_n state| ((state |uart_apb_s|)) (_ BitVec 2) (|uart_apb#2| state))
; yosys-smt2-input rst_n 1
; yosys-smt2-wire rst_n 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rst_n"], "smtname": "rst_n", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_apb_n rst_n| ((state |uart_apb_s|)) Bool (= ((_ extract 0 0) (|uart_apb#1| state)) #b1))
(declare-fun |uart_apb#3| (|uart_apb_s|) Bool) ; \pwrite
; yosys-smt2-input pwrite 1
; yosys-smt2-wire pwrite 1
; yosys-smt2-witness {"offset": 0, "path": ["\\pwrite"], "smtname": "pwrite", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_apb_n pwrite| ((state |uart_apb_s|)) Bool (|uart_apb#3| state))
(declare-fun |uart_apb#4| (|uart_apb_s|) (_ BitVec 32)) ; \pwdata
; yosys-smt2-input pwdata 32
; yosys-smt2-wire pwdata 32
; yosys-smt2-witness {"offset": 0, "path": ["\\pwdata"], "smtname": "pwdata", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |uart_apb_n pwdata| ((state |uart_apb_s|)) (_ BitVec 32) (|uart_apb#4| state))
(declare-fun |uart_apb#5| (|uart_apb_s|) Bool) ; \psel
; yosys-smt2-input psel 1
; yosys-smt2-wire psel 1
; yosys-smt2-witness {"offset": 0, "path": ["\\psel"], "smtname": "psel", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_apb_n psel| ((state |uart_apb_s|)) Bool (|uart_apb#5| state))
; yosys-smt2-cell uart uart_0
; yosys-smt2-witness {"path": ["\\uart_0"], "smtname": "uart_0", "type": "cell"}
(declare-fun |uart_apb#6| (|uart_apb_s|) Bool) ; \av_waitrequest
(declare-fun |uart_apb#7| (|uart_apb_s|) (_ BitVec 32)) ; \prdata
(declare-fun |uart_apb_h uart_0| (|uart_apb_s|) |uart_s|)
(define-fun |uart_apb#8| ((state |uart_apb_s|)) Bool (not (or  (|uart_apb#6| state) false))) ; $logic_not$uart_apb.sv:61$2_Y
(define-fun |uart_apb#9| ((state |uart_apb_s|)) Bool (= (|uart_apb#2| state) #b10)) ; $eq$uart_apb.sv:61$3_Y
(define-fun |uart_apb#10| ((state |uart_apb_s|)) Bool (and (or  (|uart_apb#8| state) false) (or  (|uart_apb#9| state) false))) ; \pready
; yosys-smt2-output pready 1
; yosys-smt2-wire pready 1
(define-fun |uart_apb_n pready| ((state |uart_apb_s|)) Bool (|uart_apb#10| state))
; yosys-smt2-output prdata 32
; yosys-smt2-wire prdata 32
(define-fun |uart_apb_n prdata| ((state |uart_apb_s|)) (_ BitVec 32) (|uart_apb#7| state))
(declare-fun |uart_apb#11| (|uart_apb_s|) Bool) ; \penable
; yosys-smt2-input penable 1
; yosys-smt2-wire penable 1
; yosys-smt2-witness {"offset": 0, "path": ["\\penable"], "smtname": "penable", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_apb_n penable| ((state |uart_apb_s|)) Bool (|uart_apb#11| state))
(declare-fun |uart_apb#12| (|uart_apb_s|) Bool) ; \paddr
; yosys-smt2-input paddr 1
; yosys-smt2-wire paddr 1
; yosys-smt2-witness {"offset": 0, "path": ["\\paddr"], "smtname": "paddr", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_apb_n paddr| ((state |uart_apb_s|)) Bool (|uart_apb#12| state))
(declare-fun |uart_apb#13| (|uart_apb_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_apb_n clk| ((state |uart_apb_s|)) Bool (|uart_apb#13| state))
(define-fun |uart_apb#14| ((state |uart_apb_s|)) (_ BitVec 1) (bvnot (ite (|uart_apb#3| state) #b1 #b0))) ; \av_write_n
; yosys-smt2-wire av_write_n 1
(define-fun |uart_apb_n av_write_n| ((state |uart_apb_s|)) Bool (= ((_ extract 0 0) (|uart_apb#14| state)) #b1))
; yosys-smt2-wire av_waitrequest 1
(define-fun |uart_apb_n av_waitrequest| ((state |uart_apb_s|)) Bool (|uart_apb#6| state))
; yosys-smt2-wire av_read_n 1
(define-fun |uart_apb_n av_read_n| ((state |uart_apb_s|)) Bool (|uart_apb#3| state))
; yosys-smt2-register _witness_.anyinit_procdff_28 2
; yosys-smt2-wire _witness_.anyinit_procdff_28 2
(define-fun |uart_apb_n _witness_.anyinit_procdff_28| ((state |uart_apb_s|)) (_ BitVec 2) (|uart_apb#0| state))
(define-fun |uart_apb#15| ((state |uart_apb_s|)) (_ BitVec 1) (bvnot (ite (|uart_apb#13| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$51
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$52
(define-fun |uart_apb_u 0| ((state |uart_apb_s|)) Bool (or (= ((_ extract 0 0) (|uart_apb#15| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$52
(define-fun |uart_apb#16| ((state |uart_apb_s|)) (_ BitVec 1) (ite (|uart_apb#5| state) #b1 #b0)) ; $auto$wreduce.cc:455:run$29 [0]
(define-fun |uart_apb#17| ((state |uart_apb_s|)) (_ BitVec 2) (ite (|uart_apb#6| state) (|uart_apb#2| state) (concat #b0 (|uart_apb#16| state)))) ; $procmux$15_Y
(define-fun |uart_apb#18| ((state |uart_apb_s|)) (_ BitVec 2) (ite (|uart_apb#11| state) #b10 (|uart_apb#2| state))) ; $procmux$19_Y
(define-fun |uart_apb#19| ((state |uart_apb_s|)) (_ BitVec 2) (ite (|uart_apb#5| state) #b01 (|uart_apb#2| state))) ; $procmux$22_Y
(define-fun |uart_apb#20| ((state |uart_apb_s|)) Bool (= (|uart_apb#2| state) #b01)) ; $procmux$21_CMP
(define-fun |uart_apb#21| ((state |uart_apb_s|)) Bool (not (or  (= ((_ extract 0 0) (|uart_apb#2| state)) #b1) (= ((_ extract 1 1) (|uart_apb#2| state)) #b1)))) ; $procmux$24_CMP
(define-fun |uart_apb#22| ((state |uart_apb_s|)) (_ BitVec 2) (ite (|uart_apb#21| state) (|uart_apb#19| state) (ite (|uart_apb#20| state) (|uart_apb#18| state) (ite (|uart_apb#9| state) (|uart_apb#17| state) #b00)))) ; $0\state[1:0]
(define-fun |uart_apb#23| ((state |uart_apb_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|uart_apb#1| state)) #b1) (|uart_apb#22| state) #b00)) ; $auto$rtlil.cc:2496:Mux$45
(define-fun |uart_apb_a| ((state |uart_apb_s|)) Bool 
  (|uart_a| (|uart_apb_h uart_0| state))
)
(define-fun |uart_apb_u| ((state |uart_apb_s|)) Bool (and
  (|uart_apb_u 0| state)
  (|uart_u| (|uart_apb_h uart_0| state))
))
(define-fun |uart_apb_i| ((state |uart_apb_s|)) Bool 
  (|uart_i| (|uart_apb_h uart_0| state))
)
(define-fun |uart_apb_h| ((state |uart_apb_s|)) Bool (and
  (= (|uart_apb_is| state) (|uart_is| (|uart_apb_h uart_0| state)))
  (= (= ((_ extract 0 0) (|uart_apb#1| state)) #b1) (|uart_n rst_n| (|uart_apb_h uart_0| state))) ; uart.rst_n
  (= (|uart_apb#13| state) (|uart_n clk| (|uart_apb_h uart_0| state))) ; uart.clk
  (= (|uart_apb#4| state) (|uart_n av_writedata| (|uart_apb_h uart_0| state))) ; uart.av_writedata
  (= (= ((_ extract 0 0) (|uart_apb#14| state)) #b1) (|uart_n av_write_n| (|uart_apb_h uart_0| state))) ; uart.av_write_n
  (= (|uart_apb#6| state) (|uart_n av_waitrequest| (|uart_apb_h uart_0| state))) ; uart.av_waitrequest
  (= (|uart_apb#7| state) (|uart_n av_readdata| (|uart_apb_h uart_0| state))) ; uart.av_readdata
  (= (|uart_apb#3| state) (|uart_n av_read_n| (|uart_apb_h uart_0| state))) ; uart.av_read_n
  (= (|uart_apb#5| state) (|uart_n av_chipselect| (|uart_apb_h uart_0| state))) ; uart.av_chipselect
  (= (|uart_apb#12| state) (|uart_n av_address| (|uart_apb_h uart_0| state))) ; uart.av_address
  (|uart_h| (|uart_apb_h uart_0| state))
))
(define-fun |uart_apb_t| ((state |uart_apb_s|) (next_state |uart_apb_s|)) Bool (and
  (= (|uart_apb#23| state) (|uart_apb#0| next_state)) ; $procdff$28 \_witness_.anyinit_procdff_28
  (|uart_t| (|uart_apb_h uart_0| state) (|uart_apb_h uart_0| next_state))
)) ; end of module uart_apb
; yosys-smt2-topmod uart_apb
; end of yosys output
